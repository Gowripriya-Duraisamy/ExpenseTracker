{"version":3,"file":"static/js/336.19612344.chunk.js","mappings":"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","sources":["webpack://client/./src/components/Header.module.css?4e81","components/ElevationScroll.tsx","components/CommonHeader.tsx","views/Wallet/index.tsx","webpack://client/./src/views/Wallet/wallet.module.css?823d","views/Wallet/Currency.tsx","views/Wallet/Icon.tsx","views/Wallet/walletCard.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Header_title__spwlb\",\"header\":\"Header_header__3unaQ\",\"appBar\":\"Header_appBar__m76Ro\"};","import { FC, cloneElement } from \"react\";\r\nimport useScrollTrigger from \"@mui/material/useScrollTrigger\";\r\n\r\nexport interface ElevationScrollProps {\r\n  window?: () => Window;\r\n  children: React.ReactElement;\r\n}\r\n\r\nconst ElevationScroll: FC<ElevationScrollProps> = ({ children, window }) => {\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n};\r\n\r\nexport default ElevationScroll;\r\n","import { AppBar, Box, IconButton, Toolbar, Typography } from \"@mui/material\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { FC } from \"react\";\r\n\r\nimport classes from \"./Header.module.css\";\r\nimport ElevationScroll from \"./ElevationScroll\";\r\n\r\n\r\ninterface HeaderProps {\r\n    name: string;\r\n    disabled?: boolean;\r\n    handleArrowAction: () => void\r\n}\r\n\r\nconst Header: FC<HeaderProps> = ({name, handleArrowAction}) => {\r\n  return (\r\n    <>\r\n      <ElevationScroll>\r\n        <AppBar className={classes.appBar}>\r\n          <Box className={classes.header}>\r\n            <IconButton onClick={handleArrowAction}>\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n            <Typography className={classes.title}>{name}</Typography>\r\n          </Box>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n      <Toolbar></Toolbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Dialog } from \"@mui/material\";\r\n\r\nimport Header from \"../../components/CommonHeader\";\r\nimport { CREATE, MY_WALLET, WALLET_CREATE } from \"../../constants\";\r\nimport WalletCard from \"./walletCard\";\r\nimport { useDispatch } from \"../../store\";\r\nimport { saveWallet, Wallet } from \"../../slices/wallet\";\r\n\r\nconst MyWallet = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const handleArrowAction = () => {\r\n    navigate(\"/expense/transactions\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = (data: Wallet) => {\r\n    dispatch(saveWallet(data));\r\n    handleClose();\r\n    navigate(\"/expense/wallet/details\")\r\n}\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        name={MY_WALLET}\r\n        handleArrowAction={handleArrowAction}\r\n      />\r\n      <Dialog open={open} >\r\n        <WalletCard handleClose={handleClose} title={WALLET_CREATE} type={CREATE} handleSave={handleSave} />\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyWallet;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"wallet_card__lsvIg\",\"cardContent\":\"wallet_cardContent__k3skP\",\"walletHeader\":\"wallet_walletHeader__xUddA\",\"divider\":\"wallet_divider__LmVI6\",\"label\":\"wallet_label__+BuLP\",\"field\":\"wallet_field__Cjcd9\",\"currencyField\":\"wallet_currencyField__Hc3bl\",\"walletBox\":\"wallet_walletBox__XM3LJ\",\"formGroup\":\"wallet_formGroup__uEdX9\",\"formHelper\":\"wallet_formHelper__-bLRk\",\"containerGrid\":\"wallet_containerGrid__F8197\",\"buttonGrid\":\"wallet_buttonGrid__Ksi6f\",\"button\":\"wallet_button__kTXUE\",\"cancelButton\":\"wallet_cancelButton__tCac2\",\"buttonDisabled\":\"wallet_buttonDisabled__e4ANu\",\"currencyHeader\":\"wallet_currencyHeader__Ct2hV\",\"searchBox\":\"wallet_searchBox__XT4sN\",\"currencyOuterBox\":\"wallet_currencyOuterBox__Txal5\",\"currencyBox\":\"wallet_currencyBox__dU7oW\",\"currencyName\":\"wallet_currencyName__rFelV\",\"currencyCode\":\"wallet_currencyCode__Gnm66\",\"currencyNameGrid\":\"wallet_currencyNameGrid__kfGT7\",\"flag\":\"wallet_flag__7sRMP\",\"iconGrid\":\"wallet_iconGrid__3vKlz\",\"iconOuterBox\":\"wallet_iconOuterBox__BBn73\",\"avatar\":\"wallet_avatar__WgTFa\",\"dialogTitle\":\"wallet_dialogTitle__YlqLj\",\"pointer\":\"wallet_pointer__aul4p\"};","import {\r\n  Avatar,\r\n  Box,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport {\r\n  Close,\r\n  KeyboardArrowRight,\r\n  MonetizationOn,\r\n  Search,\r\n  Done,\r\n} from \"@mui/icons-material\";\r\nimport { ChangeEvent, FC, useState } from \"react\";\r\nimport getSymbolFromCurrency from \"currency-symbol-map\";\r\nimport CurrencyFlag from \"react-currency-flags\";\r\n\r\nimport classes from \"./wallet.module.css\";\r\nimport { CURRENCIES } from \"../../constants/currencies\";\r\n\r\nexport interface CurrencyData {\r\n  name: string;\r\n  code: string;\r\n}\r\n\r\nexport interface CurrencyProps {\r\n  selectedCurrency: CurrencyData,\r\n  handleSelectedCurrency: (currencyData: CurrencyData) => void\r\n}\r\n\r\nconst Currency: FC<CurrencyProps> = ({\r\n  handleSelectedCurrency,\r\n  selectedCurrency\r\n}) => {\r\n  const [isCurrencyDialogOpen, setCurrencyDialog] = useState(false);\r\n  const [currencyList, setCurrencyList] = useState<CurrencyData[]>(CURRENCIES);\r\n  \r\n\r\n  const handleCurrencyDialog = () => {\r\n    setCurrencyDialog((prevState) => !prevState);\r\n  };\r\n\r\n  const handleCurrencySelection = (data: CurrencyData) => {\r\n    handleSelectedCurrency(data);\r\n    handleCurrencyDialog();\r\n  };\r\n\r\n  const handleSearch = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const searchValue = event.target.value.toLowerCase();\r\n    const filteredCurrencies = CURRENCIES.filter(\r\n      (currency) =>\r\n        currency.name.toLowerCase().includes(searchValue) ||\r\n        currency.code.toLowerCase().includes(searchValue)\r\n    );\r\n    setCurrencyList(filteredCurrencies);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        className={classes.currencyField}\r\n        variant=\"standard\"\r\n        placeholder=\"Select currency\"\r\n        onClick={handleCurrencyDialog}\r\n        value={selectedCurrency.name}\r\n        sx={{ input: { cursor: 'pointer' } }}\r\n        inputProps= {{\r\n          readOnly: true\r\n        }}\r\n        InputProps={{\r\n          disableUnderline: true,\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <IconButton>\r\n                {selectedCurrency.name ?  (\r\n                  <Avatar sx={{ width: 24, height: 24 }}   className={classes.pointer}>\r\n                    <CurrencyFlag\r\n                      currency={selectedCurrency.code}\r\n                      height={18}\r\n                    />\r\n                  </Avatar>\r\n                ): (\r\n                  <MonetizationOn sx={{ background: \"#f5f5f5\" }} />\r\n                )}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton className={classes.pointer}>\r\n                <KeyboardArrowRight />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <Dialog maxWidth=\"sm\" open={isCurrencyDialogOpen}>\r\n        <DialogTitle sx={{ m: 0, p: 2 }}>\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            onClick={handleCurrencyDialog}\r\n            sx={{\r\n              color: (theme) => theme.palette.grey[500],\r\n            }}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n          <Typography className={classes.currencyHeader}>Currency</Typography>\r\n          <Box className={classes.searchBox}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              placeholder=\"Search\"\r\n              onChange={handleSearch}\r\n              InputProps={{\r\n                disableUnderline: true,\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <IconButton>\r\n                      <Search />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box className={classes.currencyOuterBox}>\r\n            {currencyList.map((currency, index) => {\r\n              const currencySelected =\r\n                selectedCurrency.name === currency.name || false;\r\n              return (\r\n                <Grid\r\n                  container\r\n                  key={index}\r\n                  onClick={() => handleCurrencySelection(currency)}\r\n                  className={classes.currencyBox}\r\n                >\r\n                  <Grid item xs={1} className={classes.flag}>\r\n                    <CurrencyFlag currency={currency.code} height={28} />\r\n                  </Grid>\r\n                  <Grid item xs={7} className={classes.currencyNameGrid}>\r\n                    <Typography className={classes.currencyName}>\r\n                      {currency.name}\r\n                    </Typography>\r\n                    <Typography className={classes.currencyCode}>\r\n                      {currency.code} - {getSymbolFromCurrency(currency.code)}\r\n                    </Typography>\r\n                  </Grid>\r\n                  {currencySelected && (\r\n                    <Grid item xs={2}>\r\n                      <IconButton>\r\n                        <Done sx={{ color: \"#5dfa7f\" }} />\r\n                      </IconButton>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Currency;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  IconButton,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Close, KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { FC, useState } from \"react\";\r\n\r\nimport classes from \"./wallet.module.css\";\r\nimport { ICONS } from \"../../constants/icons\";\r\n\r\nexport interface IconProps {\r\n  id: number;\r\n  image: string;\r\n}\r\n\r\ninterface IconComponentProps {\r\n  selectedIcon: IconProps,\r\n  handleIconSelection: (value: IconProps) => void;\r\n}\r\n\r\nconst Icon: FC<IconComponentProps> = ({selectedIcon, handleIconSelection}) => {\r\n  const [isIconDialogOpen, setIconDialogOpen] = useState(false);\r\n  \r\n\r\n  const handleIconBoxClick = () => {\r\n    setIconDialogOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleSelectedIcon = (value: IconProps) => {\r\n    handleIconSelection(value);\r\n    handleIconBoxClick();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={3} onClick={handleIconBoxClick} className={classes.iconGrid}>\r\n        <IconButton>\r\n          <Avatar src={selectedIcon.image} />\r\n        </IconButton>\r\n        <KeyboardArrowDown />\r\n      </Grid>\r\n      <Dialog open={isIconDialogOpen} fullWidth maxWidth=\"xs\">\r\n        <DialogTitle className={classes.dialogTitle}>\r\n          {\" \"}\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            onClick={handleIconBoxClick}\r\n            sx={{\r\n              color: (theme) => theme.palette.grey[500],\r\n            }}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n          <Typography className={classes.currencyHeader}>\r\n            Select icon\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Tabs value={\"basic\"} centered>\r\n            <Tab label=\"Basic\" value=\"basic\" />\r\n          </Tabs>\r\n          <Box className={classes.iconOuterBox}>\r\n            {ICONS.map((icon) => {\r\n              return (\r\n                <Avatar\r\n                key={icon.id}\r\n                  onClick={() => handleSelectedIcon(icon)}\r\n                  className={classes.avatar}\r\n                  src={icon.image}\r\n                />\r\n              );\r\n            })}\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormHelperText,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport {ChangeEvent, FC, useState } from \"react\";\r\n\r\nimport Currency, { CurrencyData } from \"./Currency\";\r\nimport Icon, { IconProps } from \"./Icon\";\r\nimport classes from \"./wallet.module.css\";\r\nimport clsx from \"clsx\";\r\nimport { ICONS } from \"../../constants/icons\";\r\nimport { Wallet } from \"../../slices/wallet\";\r\nimport { CREATE, EDIT } from \"../../constants\";\r\nimport { CURRENCIES } from \"../../constants/currencies\";\r\n\r\nexport interface WalletCardProps {\r\n  handleClose: () => void;\r\n  handleSave: (data: Wallet) => void;\r\n  title: string;\r\n  type: string;\r\n  data?: Wallet;\r\n}\r\n\r\nconst WalletCard : FC<WalletCardProps> = ({handleSave, title, data, handleClose, type}) => {\r\n  const [selectedCurrency, setSelectedCurrency] = useState<CurrencyData>({\r\n    name: data?.currency || \"\",\r\n    code: CURRENCIES.find((e) => e.name === data?.currency)?.code || \"\",\r\n  });\r\n  \r\n  const [walletName, setWalletName] = useState(data?.name || \"\");\r\n  const [selectedIcon, setSelectedIcon] = useState<IconProps>(data?.imageId ? ICONS[data.imageId - 1] :ICONS[0]);\r\n  const [initialBalance, setBalance] = useState(data?.initialBalance || 0);\r\n  const [isTotalExcluded, setIsTotalExcluded] = useState(data?.isTotalExcluded || false);\r\n  const [isEdited, setIsEdited] = useState(false);\r\n  const isButtonEnabled = (type === CREATE && !!walletName && !!selectedCurrency.name) || \r\n                            (type === EDIT && isEdited);\r\n\r\n  const handleWalletNameChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setIsEdited(true);\r\n    setWalletName(event.target.value);\r\n  }\r\n\r\n  const handleCurrencySelection = (data: CurrencyData) => {\r\n    setSelectedCurrency(data);\r\n    setIsEdited(true)\r\n  }\r\n\r\n  const handleIconSelection = (data: IconProps) => {\r\n    setSelectedIcon(data);\r\n    setIsEdited(true);\r\n  }\r\n\r\n  const handleBalanceChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setBalance(+event.target.value);\r\n    setIsEdited(true);\r\n  }\r\n\r\n  const handleCheckbox = () => {\r\n    setIsTotalExcluded(prevState => !prevState);\r\n    setIsEdited(true);\r\n  }\r\n\r\n  const handleButtonSave = () => {\r\n     handleSave({\r\n        currency: selectedCurrency.name,\r\n        imageId: selectedIcon.id,\r\n        isTotalExcluded,\r\n        initialBalance,\r\n        name: walletName\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography className={classes.walletHeader}>\r\n            {title}\r\n          </Typography>\r\n          <Divider className={classes.divider} />\r\n          <Grid container>\r\n            <Icon selectedIcon={selectedIcon} handleIconSelection={handleIconSelection} />\r\n            <Grid item xs={8.5} className={classes.walletBox}>\r\n              <label className={classes.label}>Wallet name</label>\r\n              <TextField\r\n                variant=\"standard\"\r\n                className={classes.field}\r\n                onChange={handleWalletNameChange}\r\n                placeholder=\"Your wallet name?\"\r\n                value={walletName}\r\n                InputProps={{\r\n                  disableUnderline: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.containerGrid}>\r\n            <Grid className={classes.walletBox} item xs={7}>\r\n              <label className={classes.label}>Currency</label>\r\n              <Currency\r\n                selectedCurrency={selectedCurrency}\r\n                handleSelectedCurrency={handleCurrencySelection}\r\n              />\r\n            </Grid>\r\n            <Grid className={classes.walletBox} item xs={4.5}>\r\n              <label className={classes.label}>Initial Balance</label>\r\n              <TextField\r\n                variant=\"standard\"\r\n                className={classes.field}\r\n                value={initialBalance > 0 ? initialBalance : ''}\r\n                type={\"number\"}\r\n                placeholder=\"0\"\r\n                onChange={handleBalanceChange}\r\n                InputProps={{\r\n                  inputProps: { min: 0 },\r\n                  disableUnderline: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <FormGroup className={classes.formGroup}>\r\n            <FormControlLabel\r\n              control={<Checkbox  onChange={handleCheckbox} value={isTotalExcluded} />}\r\n              label=\"Excluded from Total\"\r\n            />\r\n            <FormHelperText className={classes.formHelper}>\r\n              Ignore this wallet and its balance in the \"Total\" mode\r\n            </FormHelperText>\r\n          </FormGroup>\r\n          <Grid className={classes.buttonGrid}>\r\n          { type === EDIT && <Button\r\n              className={classes.cancelButton}\r\n              onClick={handleClose}\r\n            >\r\n              Cancel\r\n            </Button>}\r\n            <Button\r\n              disabled={!isButtonEnabled}\r\n              className={\r\n                !isButtonEnabled\r\n                  ? clsx(classes.button, classes.buttonDisabled)\r\n                  : classes.button\r\n              }\r\n              onClick={handleButtonSave}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WalletCard;\r\n"],"names":["_ref","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","name","handleArrowAction","_jsxs","_Fragment","_jsx","ElevationScroll","AppBar","className","classes","Box","IconButton","onClick","ArrowBackIcon","Typography","Toolbar","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","open","setOpen","handleClose","Header","MY_WALLET","Dialog","WalletCard","title","WALLET_CREATE","type","CREATE","handleSave","data","saveWallet","handleSelectedCurrency","selectedCurrency","isCurrencyDialogOpen","setCurrencyDialog","_useState3","CURRENCIES","_useState4","currencyList","setCurrencyList","handleCurrencyDialog","prevState","TextField","variant","placeholder","value","sx","input","cursor","inputProps","readOnly","InputProps","disableUnderline","startAdornment","InputAdornment","position","Avatar","width","height","CurrencyFlag","currency","code","MonetizationOn","background","endAdornment","KeyboardArrowRight","maxWidth","DialogTitle","m","p","color","theme","palette","grey","Close","onChange","event","searchValue","toLowerCase","filteredCurrencies","filter","includes","Search","DialogContent","map","index","currencySelected","Grid","container","item","xs","getSymbolFromCurrency","Done","selectedIcon","handleIconSelection","isIconDialogOpen","setIconDialogOpen","handleIconBoxClick","src","image","KeyboardArrowDown","fullWidth","Tabs","centered","Tab","label","ICONS","icon","id","_CURRENCIES$find","find","e","setSelectedCurrency","walletName","setWalletName","_useState5","imageId","_useState6","setSelectedIcon","_useState7","initialBalance","_useState8","setBalance","_useState9","isTotalExcluded","_useState10","setIsTotalExcluded","_useState11","_useState12","isEdited","setIsEdited","isButtonEnabled","EDIT","Card","CardContent","Divider","Icon","Currency","min","FormGroup","FormControlLabel","control","Checkbox","FormHelperText","Button","disabled","clsx"],"sourceRoot":""}