{"version":3,"file":"static/js/865.775313d3.chunk.js","mappings":"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","sources":["views/Login/GoogleLogin.tsx","webpack://client/./src/views/Login/login.module.css?efa7","views/Login/ManualLogin.tsx","views/Login/index.tsx"],"sourcesContent":["import {\r\n  GoogleOAuthProvider,\r\n  GoogleLogin as GoogleSignIn,\r\n  CredentialResponse,\r\n} from \"@react-oauth/google\";\r\n\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nconst GoogleLogin = () => {\r\n  const { googleSignIn } = useAuth();\r\n\r\n  const handleLoginSuccess = (credentialData: CredentialResponse) => {\r\n    googleSignIn(credentialData);\r\n  };\r\n\r\n  const handleLoginError = () => {\r\n    console.log(\"Login failed\");\r\n  };\r\n  return (\r\n    <GoogleOAuthProvider\r\n      clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID || \"\"}\r\n    >\r\n      <GoogleSignIn\r\n        text=\"signin_with\"\r\n        onSuccess={handleLoginSuccess}\r\n        onError={handleLoginError}\r\n      />\r\n    </GoogleOAuthProvider>\r\n  );\r\n};\r\n\r\nexport default GoogleLogin;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"login_card__51a0Z\",\"grid\":\"login_grid__5LYkn\",\"header\":\"login_header__oglah\",\"field\":\"login_field__gHr2F\",\"socialHeader\":\"login_socialHeader__weJlW\",\"fieldHeader\":\"login_fieldHeader__wbTtA\",\"password\":\"login_password__2XBpl\",\"loginButton\":\"login_loginButton__lzQMf\",\"itemGrid\":\"login_itemGrid__zQoXT\",\"register\":\"login_register__EYB6o\"};","import { Typography, Button } from \"@mui/material\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport classes from \"./login.module.css\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nconst ManualLogin = () => {\r\n  const { login, register } = useAuth();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const { type } = params;\r\n\r\n  const handleButtonClick = (type: string) => {\r\n    navigate(`/user/${type}`);\r\n  };\r\n\r\n  const handlePasswordClick = () => {\r\n    navigate(\"/forgotPassword\");\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n      }}\r\n      onSubmit={(values) => {\r\n        if (values.email && values.password) {\r\n          type === \"register\" && register(values.email, values.password);\r\n          type === \"login\" && login(values.email, values.password);\r\n        }\r\n      }}\r\n    >\r\n      {({ values, handleChange, setFieldValue }) => (\r\n        <Form>\r\n          <Typography className={classes.fieldHeader}>\r\n            Using Expense Tracker Account\r\n          </Typography>\r\n          <input\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            className={classes.field}\r\n          />\r\n          <input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            className={classes.field}\r\n          />\r\n          {type === \"login\" && (\r\n            <>\r\n              <Typography\r\n                onClick={handlePasswordClick}\r\n                className={classes.password}\r\n              >\r\n                Forgot Password\r\n              </Typography>\r\n              <Button className={classes.loginButton} type=\"submit\">\r\n                LOGIN\r\n              </Button>\r\n              <Typography\r\n                onClick={() => {\r\n                  handleButtonClick(\"register\");\r\n                  setFieldValue(\"email\", \"\");\r\n                  setFieldValue(\"password\", \"\");\r\n                }}\r\n              >\r\n                Don't have an account?\r\n                <span> </span>\r\n                <span className={classes.register}>Register</span>\r\n              </Typography>\r\n            </>\r\n          )}\r\n          {type === \"register\" && (\r\n            <>\r\n              <Button className={classes.loginButton} type=\"submit\">\r\n                REGISTER\r\n              </Button>\r\n              <Typography\r\n                onClick={() => {\r\n                  handleButtonClick(\"login\");\r\n                  setFieldValue(\"email\", \"\");\r\n                  setFieldValue(\"password\", \"\");\r\n                }}\r\n              >\r\n                Have an account?\r\n                <span> </span>\r\n                <span className={classes.register}>Sign In</span>\r\n              </Typography>\r\n            </>\r\n          )}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ManualLogin;\r\n","import { CardContent, Card, Grid, Typography, Divider } from \"@mui/material\";\r\nimport GoogleLogin from \"./GoogleLogin\";\r\n\r\nimport classes from \"./login.module.css\";\r\nimport ManualLogin from \"./ManualLogin\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <Grid className={classes.grid}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography className={classes.header}>Log In</Typography>\r\n          <Grid container>\r\n            <Grid className={classes.itemGrid} item xs={5.8}>\r\n              <Typography className={classes.socialHeader}>\r\n                Using social networking accounts\r\n              </Typography>\r\n              <GoogleLogin />\r\n            </Grid>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <Grid className={classes.itemGrid} item xs={5.8}>\r\n              <ManualLogin />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["googleSignIn","useAuth","_jsx","GoogleOAuthProvider","clientId","process","children","GoogleSignIn","text","onSuccess","credentialData","onError","console","log","_useAuth","login","register","navigate","useNavigate","type","useParams","handleButtonClick","concat","handlePasswordClick","Formik","initialValues","email","password","onSubmit","values","_ref","handleChange","setFieldValue","_jsxs","Form","Typography","className","classes","placeholder","name","value","onChange","_Fragment","onClick","Button","Grid","Card","CardContent","container","item","xs","GoogleLogin","Divider","orientation","flexItem","ManualLogin"],"sourceRoot":""}